# -*- coding: utf-8 -*-
"""ScheduleVLU.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-VNV2f69Zyq4tW7kCVkdMjWjQN6t2umN

# **Đồ án Schedule VLU**
---
Web Nguồn: https://online.vlu.edu.vn/

Các api:
*   Login: [./Login](https://online.vlu.edu.vn/Login)
*   Schedule: [./Home/DrawingSchedules?YearStudy=2021-2022&TermID=HK02&Week=1](https://online.vlu.edu.vn/Home/DrawingSchedules?YearStudy=2021-2022&TermID=HK02&Week=1)
*   Exam: [./Home/ShowExam?YearStudy=2021-2022&TermID=HK01](https://online.vlu.edu.vn/Home/ShowExam?YearStudy=2021-2022&TermID=HK01)

Thành viên:
*   **Cổ Thanh Phong**
*   **Nguyễn Phương Nam**

# **Thêm các thư viện cần dùng**
"""

from os import environ, path
from requests import session
from bs4 import BeautifulSoup as bs
from dotenv import load_dotenv, set_key
from base64 import b64encode, b64decode

"""---
# Xử lí thông tin
Lấy dữ liệu người dùng từ trang [online.vlu.edu.vn]( https://online.vlu.edu.vn)

Tạo các hàm lọc và lấy thông tin từ các api

---
*Cổ Thanh Phong*

---
Mã hóa và giải mã thông tin tài khoản
"""


def encode_pwd(pwd: str) -> str:
    return "&#80;&#104;&#111;&#110;&#103;&#74;&#111;&#99;&#107;&#101;&#114;" + b64encode(pwd.encode('ascii')).decode('ascii')


def decode_pwd(pwd: str) -> str:
    return b64decode(pwd.replace("&#80;&#104;&#111;&#110;&#103;&#74;&#111;&#99;&#107;&#101;&#114;", "").encode('ascii')).decode('ascii')


"""---
Xử lí thông tin người dùng
"""


def user_data(db_path: str, user: str, passwd: str) -> list:
    if path.isfile(db_path) is False:
        with open(db_path, 'w') as f:
            f.write(f'USER_NAME = {user}\nPASSWORD = {passwd}')
        change_user_data(db_path, user, passwd)

    load_dotenv(db_path)
    usr, pwd = environ['USER_NAME'], environ['PASSWORD']

    return usr, pwd


def change_user_data(db_path: str, usr: str, pwd: str) -> None:
    usr, pwd = usr, encode_pwd(pwd)

    # thay đổi thông tin trong file user_info.env
    set_key(db_path, 'USER_NAME', usr)
    set_key(db_path, 'PASSWORD', pwd)

    environ['USER_NAME'], environ['PASSWORD'] = usr, pwd


"""---
Lấy năm học, học kỳ, tuần hiện tại theo web
"""


def get_datetime(login_url: str, values_shedule: str, usr: str, pwd: str) -> tuple:
    global ses
    ses, payload = session(), {'txtTaiKhoan': usr, 'txtMatKhau': pwd}
    with ses.post(login_url, data=payload) as login:  # đăng nhập bằng tài khoản trang 'online'
        if 'T&#234;n đăng nhập hoặc mật khẩu kh&#244;ng ch&#237;nh x&#225;c' in login.text:
            return None, None

    # lấy 3 thông số YearStudy, TermID, Week ở thanh chọn lịch từ trang /Home/Schedules
    datas = ses.get(values_shedule).content.decode()  # lấy response html của trang Home/Schedules

    datas_soup = bs(datas, 'html.parser')
    # lấy ra danh sách 3 thẻ 'select' chứa giá trị 'id' ở thanh chọn xem thời khóa biểu ['Năm học', 'Học kỳ', 'Tuần']
    # sau đó từ những thẻ 'select' chứa giá trị 'id' lấy các 'value' của các thẻ 'option' ra và cho vào danh sách
    try:
        lst_year = [i['value'] for i in datas_soup.find('select', attrs={'id': 'YearStudy'}).find_all('option')]
        lst_termId = [i['value'] for i in datas_soup.find('select', attrs={'id': 'TermID'}).find_all('option')]

        return lst_year, lst_termId
    except Exception:
        return None, None


"""---
Lấy danh sách các tuần theo năm học và học kỳ
"""


def get_week(year: str, term: str) -> list:
    week_api = f'https://online.vlu.edu.vn/Home/GetWeek/{year}${term}'  # api lấy danh sách các tuần
    lst_week = [_week[8:] for _week in ses.get(week_api).text[1:-1].split(',') if '"Week"' in _week]
    # ses.get(week_api).text[1:-1] = '[{"Week":1,"DisPlayWeek":17,"WeekOfYear":1},{"Week":2,"DisPlayWeek":18,"WeekOfYear":2},... {"Week":10,"DisPlayWeek":28,"WeekOfYear":10}]'
    # lấy danh sách các phần tử số tuần ở dạng chuỗi sau đó cắt tại ','
    # đồng thời [1:-1] để bỏ 2 ngoặc vuông ở đầu và cuối

    return lst_week


"""---
Lấy html của lịch học
"""


def get_subjects(url: str, YearStudy: str, TermID: str, Week: str) -> dict:
    api_schedule = f'{url}Home/DrawingSchedules?YearStudy={YearStudy}&TermID={TermID}&Week={Week}'
    schedule_data = ses.get(api_schedule).content.decode()  # lấy response html của trang Home/DrawingStudent

    """
    academy_datas = soup.find_all('div', attrs={'class': 'Content'})  # danh sách các môn học trong tuần
    if not academy_datas:
        return None

    academy_values = {}
    for div_tag in academy_datas:
        date = div_tag['title']  # lấy thứ trong tuần

        if date not in academy_values: academy_values[date] = []
        academy_values[date].append(div_tag.contents)  # div_tag.contents là cú pháp lấy danh sách nội dung của thẻ div
    """
    return schedule_data


"""---
Lấy html lịch thi
"""


def get_exams(url: str, YearStudy: str, TermID: str) -> dict:
    api_exam = f'{url}Home/ShowExam?YearStudy={YearStudy}&TermID={TermID}'
    exam_data = ses.get(api_exam).content.decode()  # lấy response html của trang Home/ShowExam

    return exam_data


"""---
Hàm main xử lí
"""


def main_process(user: str, passwd: str):
    url = 'https://online.vlu.edu.vn/'
    login_url = f'{url}Login'
    values_shedule = f'{url}Home/Schedules'
    db_path = './user_info.env'  # file chứa tk và mk bị mã hóa

    usr, en_pwd = user_data(db_path, user, passwd)
    de_pwd = decode_pwd(en_pwd)  # decode password

    lst_YearStudy, lst_TermID = get_datetime(login_url, values_shedule, usr, de_pwd)

    return lst_YearStudy, lst_TermID
